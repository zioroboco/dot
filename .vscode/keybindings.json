[
  {
    "key": "shift+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && editorLangId != 'markdown'"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+cmd+a",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "cmd+r cmd+n",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+enter",
    "command": "-scm.acceptInput",
    "when": "scmRepository"
  },
  {
    "key": "cmd+enter",
    "command": "-debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "cmd+enter",
    "command": "-breadcrumbs.revealFocusedFromTreeAside",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "key": "cmd+enter",
    "command": "-breadcrumbs.revealFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "cmd+k enter",
    "command": "-workbench.action.keepEditor"
  },
  {
    "key": "ctrl+w up",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+w down",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+w right",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+w left",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "shift+cmd+.",
    "command": "-editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "shift+cmd+.",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "ctrl+cmd+enter",
    "command": "breadcrumbs.focus",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "shift+cmd+;",
    "command": "-breadcrumbs.focus",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "cmd+k cmd+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+k cmd+w",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "alt+cmd+t",
    "command": "-workbench.action.closeOtherEditors"
  },
  {
    "key": "shift+cmd+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "shift+cmd+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "-workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "-workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+k cmd+f",
    "command": "list.toggleFilterOnType"
  },
  {
    "key": "cmd+k cmd+f",
    "command": "-editor.action.formatSelection",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "escape escape",
    "command": "-workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "cmd+k cmd+d",
    "command": "workbench.view.extension.dockerView"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward"
  },
  {
    "key": "alt+cmd+s",
    "command": "-workbench.action.files.saveAll"
  },
  {
    "key": "alt+cmd+s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+k cmd+b",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "cmd+k cmd+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "shift+cmd+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+cmd+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+\\ ctrl+s",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-cursorLineEnd",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+k down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+k left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+k right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+k up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "ctrl+r ctrl+r",
    "command": "workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "alt+cmd+0",
    "command": "-workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "shift+cmd+a",
    "command": "git-graph.view"
  },
  {
    "key": "ctrl+cmd+a",
    "command": "git-graph.view"
  },
  {
    "key": "cmd+r cmd+r",
    "command": "editor.action.changeAll",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+f2",
    "command": "-editor.action.changeAll",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "cmd+enter",
    "command": "-editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "cmd+enter",
    "command": "-workbench.action.submitComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "cmd+k cmd+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "cmd+k cmd+e",
    "command": "-keybindings.editor.defineWhenExpression",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+up",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+k shift+cmd+up",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "alt+cmd+down",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "cmd+k shift+cmd+down",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "alt+cmd+tab",
    "command": "-workbench.action.showAllEditors"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-workbench.action.keybindingsReference"
  },
  {
    "key": "shift+alt+cmd+left",
    "command": "-cursorColumnSelectLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+cmd+right",
    "command": "-cursorColumnSelectRight",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFileFolder"
  },
  {
    "key": "shift+cmd+o",
    "command": "gitProjectManager.openProject"
  },
  {
    "key": "alt+cmd+p",
    "command": "-gitProjectManager.openProject"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  {
    "key": "shift+tab",
    "command": "editor.action.outdentLines"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.showPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build"
  },
  {
    "key": "ctrl+\\ ctrl+\\",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+\\ t",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+\\ ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+\\ p",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "ctrl+\\ ctrl+p",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "ctrl+\\ o",
    "command": "workbench.action.output.toggleOutput"
  },
  {
    "key": "ctrl+\\ ctrl+o",
    "command": "workbench.action.output.toggleOutput"
  },
  {
    "key": "ctrl+\\ ctrl+c",
    "command": "workbench.debug.action.toggleRepl"
  },

  // Cursor up/down by display-line (i.e. within wrapped lines)
  // {{{
  {
    "key": "up",
    "command": "cursorUp",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible && !inQuickOpen"
  },
  {
    "key": "down",
    "command": "cursorDown",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible && !inQuickOpen"
  },
  // {
  //   "key": "k",
  //   "command": "cursorUp",
  //   "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  // {
  //   "key": "j",
  //   "command": "cursorDown",
  //   "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+\\ right",
    "command": "workbench.action.nextPanelView"
  },
  {
    "key": "ctrl+\\ left",
    "command": "workbench.action.previousPanelView"
  },
  {
    "key": "shift+alt+cmd+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+cmd+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+e up",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "key": "ctrl+e down",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "key": "ctrl+e left",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "ctrl+e right",
    "command": "workbench.action.moveEditorToRightGroup"
  },
  {
    "key": "ctrl+s down",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "ctrl+s left",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "ctrl+s right",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "ctrl+s up",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+m",
    "command": "-workbench.actions.view.problems"
  },
  {
    "key": "alt+cmd+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+j",
    "command": "-bookmarks.expandSelectionToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+l",
    "command": "-bookmarks.expandSelectionToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+k",
    "command": "-bookmarks.shrinkSelection",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+e ctrl+e",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "shift+cmd+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "cmd+k cmd+g",
    "command": "workbench.view.extension.github-pull-requests"
  },
  {
    "key": "shift+cmd+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "cmd+k cmd+s",
    "command": "conflictSqueezer.squeezeConflicts"
  },
  {
    "key": "cmd+r cmd+b",
    "command": "gitlens.toggleLineBlame"
  },
  {
    "key": "cmd+r cmd+d",
    "command": "git.cleanAll"
  },
  {
    "key": "cmd+r cmd+f",
    "command": "gitlens.showCommitSearch",
    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+/",
    "command": "-gitlens.showCommitSearch",
    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "cmd+r cmd+f",
    "command": "gitlens.showCommitSearch",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+cmd+g /",
    "command": "-gitlens.showCommitSearch",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "cmd+r cmd+e",
    "command": "gitlens.views.openChanges"
  },
  {
    "key": "alt+up",
    "command": "notebook.cell.moveUp"
  },
  {
    "key": "alt+down",
    "command": "notebook.cell.moveDown"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "cmd+n cmd+f",
    "command": "explorer.newFolder"
  },
  {
    "key": "cmd+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+]",
    "command": "-extension.vim_ctrl+]",
    "when": "editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"
  },
  {
    "key": "ctrl+[",
    "command": "-extension.vim_ctrl+[",
    "when": "editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"
  },
  {
    "key": "alt+cmd+g .",
    "command": "gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+cmd+g .",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+.",
    "command": "gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "shift+cmd+r",
    "command": "-solargraph.search"
  },
  {
    "key": "cmd+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "shift+cmd+r",
    "command": "gitlens.showFileHistoryView"
  },
  {
    "key": "escape",
    "command": "-search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "cmd+k cmd+x",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "cmd+b cmd+p",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+b cmd+c",
    "command": "workbench.debug.viewlet.action.removeAllBreakpoints"
  },
  {
    "key": "cmd+'",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "cmd+b cmd+b",
    "command": "bookmarks.toggle"
  },
  {
    "key": "cmd+b cmd+n",
    "command": "bookmarks.toggleLabeled"
  },
  {
    "key": "cmd+r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+k cmd+x",
    "command": "-editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+b cmd+p",
    "command": "bookmarks.listFromAllFiles"
  },
  {
    "key": "cmd+b cmd+backspace",
    "command": "bookmarks.clearFromAllFiles"
  },
  {
    "key": "cmd+b cmd+r",
    "command": "bookmarks.refresh"
  },
  {
    "key": "shift+cmd+i",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+i",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+a",
    "command": "-extension.vscode-git-automator.addAndCommitAllFiles"
  },
  {
    "key": "shift+cmd+x",
    "command": "-extension.vscode-git-automator.pushLocalCommits"
  },
  {
    "key": "shift+cmd+z",
    "command": "-extension.vscode-git-automator.addAndCommitCurrentFile"
  },
  {
    "key": "cmd+b cmd+w",
    "command": "editor.debug.action.selectionToWatch"
  },
  {
    "key": "ctrl+\\ ctrl+0",
    "command": "bookmarksExplorer.focus"
  },
  {
    "key": "ctrl+\\ ctrl+backspace",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+e",
    "command": "-extension.vim_ctrl+e",
    "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
  },
  {
    "key": "ctrl+d",
    "command": "-extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "cmd+]",
    "command": "-markdown.extension.onIndentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+cmd+[",
    "command": "workbench.files.action.collapseExplorerFolders"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+alt+cmd+]",
    "command": "editor.action.smartSelect.expand"
  },
  {
    "key": "ctrl+alt+cmd+[",
    "command": "editor.action.smartSelect.shrink"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+shift+alt+cmd+enter",
    "command": "references-view.find",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.find",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "f4",
    "command": "-references-view.next",
    "when": "reference-list.hasResult"
  },
  {
    "key": "shift+f4",
    "command": "-references-view.prev",
    "when": "reference-list.hasResult"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+cmd+enter",
    "command": "editor.action.referenceSearch.trigger"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+;",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "shift+cmd+;",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+cmd+o",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+\\ ctrl+]",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "ctrl+\\ ctrl+[",
    "command": "workbench.action.terminal.focusPrevious"
  },
  {
    "key": "ctrl+\\ ctrl+d",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "ctrl+d",
    "command": "-deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+\\ down",
    "command": "REPLVariables.focus"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "-search.searchEditor.action.deleteFileResults",
    "when": "inSearchEditor && inSearchEditor"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+enter",
    "command": "language-julia.executeCell",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "alt+enter",
    // "command": "language-julia.executeCodeBlockOrSelection",
    "command": "language-julia.executeJuliaCodeInREPL",
    "when": "editorTextFocus && editorLangId == 'markdown' && !jupyter.hascodecells"
  },
  {
    "key": "cmd+k cmd+z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "alt+down",
    "command": "spaceBlockJumper.moveDown"
  },
  {
    "key": "alt+up",
    "command": "spaceBlockJumper.moveUp"
  },
  {
    "key": "shift+alt+down",
    "command": "spaceBlockJumper.selectDown"
  },
  {
    "key": "shift+alt+up",
    "command": "spaceBlockJumper.selectUp"
  },
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.debug.stop"
  },
  {
    "key": "ctrl+\\ ctrl+w",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "cmd+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "cmd+6",
    "command": "-workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "cmd+7",
    "command": "-workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "cmd+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "cmd+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "cmd+5",
    "command": "-workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "cmd+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "cmd+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "cmd+0",
    "command": "workbench.action.focusLastEditorGroup"
  },
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "shift+cmd+v",
    "command": "markdown.showSource",
    "when": "!activeEditorIsNotPreview"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.navigateBack",
    "when": "editorFocus && !activeEditorIsNotPreview && !inputFocus"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.navigateForward",
    "when": "!activeEditorIsNotPreview && editorFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-markdown.extension.editing.toggleHeadingUp",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-markdown.extension.editing.toggleHeadingDown",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+enter",
    "command": "-markdown.extension.onCtrlEnterKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },

  {
    "key": "cmd+n cmd+d",
    "command": "memo.openDailyNote"
  },
  {
    "key": "cmd+n cmd+v",
    "command": "markdown-note-factory.newNoteFromSelection"
  },
  {
    "key": "cmd+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+n up",
    "command": "workbench.action.newGroupAbove"
  },
  {
    "key": "cmd+n down",
    "command": "workbench.action.newGroupBelow"
  },
  {
    "key": "cmd+n left",
    "command": "workbench.action.newGroupLeft"
  },
  {
    "key": "cmd+n right",
    "command": "workbench.action.newGroupRight"
  },
  {
    "key": "ctrl+\\ ctrl+q",
    "command": "workbench.action.focusPanel"
  },
  {
    "key": "cmd+'",
    "command": "wallaby.playTraceNextStepOver",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "f10",
    "command": "-wallaby.playTraceNextStepOver",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "ctrl+cmd+'",
    "command": "wallaby.playTracePrevStepOver",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "ctrl+f10",
    "command": "-wallaby.playTracePrevStepOver",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "shift+cmd+\\",
    "command": "wallaby.stopTraceNavigation",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "shift+f5",
    "command": "-wallaby.stopTraceNavigation",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "cmd+;",
    "command": "wallaby.playTraceNextStep",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "f11",
    "command": "-wallaby.playTraceNextStep",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "shift+cmd+;",
    "command": "wallaby.playTraceNextStepOut",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "shift+f11",
    "command": "-wallaby.playTraceNextStepOut",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "ctrl+shift+cmd+;",
    "command": "wallaby.playTracePrevStepOut",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "ctrl+shift+f11",
    "command": "-wallaby.playTracePrevStepOut",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "ctrl+cmd+;",
    "command": "wallaby.playTracePrevStep",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  {
    "key": "ctrl+f11",
    "command": "-wallaby.playTracePrevStep",
    "when": "wallaby.started && wallaby.traceBeingNavigated && !inDebugMode"
  },
  // }}}

  // Move cursor up/down by display line {{{

  // {
  //   "key": "up",
  //   "command": "cursorUp",
  //   "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  // {
  //   "key": "down",
  //   "command": "cursorDown",
  //   "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  // {
  //   "key": "k",
  //   "command": "cursorUp",
  //   "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  // {
  //   "key": "j",
  //   "command": "cursorDown",
  //   "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },

  // }}}

  {
    "key": "ctrl+\\ ctrl+m",
    "command": "workbench.action.focusCommentsPanel"
  },
  {
    "key": "shift+cmd+i",
    "command": "-insertDateString.insertDateTime",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "cmd+k shift+enter",
    "command": "-workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+k shift+enter",
    "command": "-workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+n cmd+u",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "alt+enter",
    "command": "notebook.cell.execute",
    "when": "notebookCellListFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-notebook.cell.execute",
    "when": "notebookCellListFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "language-julia.executeJuliaCodeInREPL",
    "when": "editorTextFocus && editorLangId == 'julia' && !jupyter.hascodecells"
  },
  {
    "key": "ctrl+enter",
    "command": "-language-julia.executeJuliaCodeInREPL",
    "when": "editorTextFocus && editorLangId == 'julia'"
  },
  {
    "key": "ctrl+enter",
    "command": "language-julia.executeJuliaCodeInREPL",
    "when": "editorTextFocus && editorLangId == 'juliamarkdown' && !jupyter.hascodecells"
  },
  {
    "key": "ctrl+enter",
    "command": "-language-julia.executeJuliaCodeInREPL",
    "when": "editorTextFocus && editorLangId == 'juliamarkdown'"
  },
  {
    "key": "alt+enter",
    "command": "jupyter.runcurrentcell",
    "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-jupyter.runcurrentcell",
    "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
  },
  {
    "key": "cmd+enter",
    "command": "notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused"
  },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused"
  },
  {
    "key": "cmd+k cmd+t",
    "command": "todo-tree-view.focus"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-footsteps.skipBack"
  },
  {
    "key": "ctrl+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+alt+right",
    "command": "-footsteps.skipForwards"
  },
  {
    "key": "ctrl+backspace",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+s",
    "command": "-issue.createIssueFromFile",
    "when": "resourceScheme == 'newIssue' && config.files.autoSave != 'off'"
  },
  {
    "key": "shift+cmd+s shift+cmd+a",
    "command": "git.commitAllAmendNoVerify"
  },
  {
    "key": "shift+cmd+s shift+cmd+s",
    "command": "git.commitAllNoVerify"
  },
  {
    "key": "cmd+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "cmd+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "alt+cmd+s",
    "command": "-saveAll"
  },
  {
    "key": "cmd+b cmd+j",
    "command": "bookmarks.jumpToNext"
  },
  {
    "key": "cmd+b cmd+k",
    "command": "bookmarks.jumpToPrevious"
  },
  {
    "key": "cmd+k cmd+b",
    "command": "-editor.action.setSelectionAnchor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "escape",
    "command": "-editor.action.cancelSelectionAnchor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "ctrl+shift+[",
    "command": "editor.foldAll"
  },
  {
    "key": "ctrl+shift+]",
    "command": "editor.unfoldAll"
  },
  {
    "key": "ctrl+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+shift+alt+left",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+shift+alt+right",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+alt+cmd+w",
    "command": "workbench.action.toggleTabsVisibility"
  },
  {
    "key": "ctrl+cmd+w",
    "command": "-workbench.action.toggleTabsVisibility"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inputFocus && !editorFocus && !findInputFocussed && !findWidgetVisible"
  },
  {
    "key": "ctrl+up",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inputFocus && !editorFocus && !findInputFocussed && !findWidgetVisible"
  },
  {
    "key": "ctrl+;",
    "command": "workbench.action.openPreviousEditorFromHistory"
  },
  {
    "key": "ctrl+\\ ctrl+v",
    "command": "workbench.debug.action.focusVariablesView"
  },
  {
    "key": "ctrl+d",
    "command": "extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
  },
  {
    "key": "ctrl+\\ ctrl+cmd+\\",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "cmd+\\",
    "command": "go.debug.cursor",
    "when": "!inDebugMode && editorLangId == 'go'"
  },
  {
    "key": "ctrl+\\ ctrl+r",
    "command": "prStatus:github.focus"
  },
  {
    "key": "ctrl+\\ ctrl+e",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "shift+alt+cmd+i",
    "command": "-insertDateString.insertOwnFormatDateTime",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+n shift+cmd+i",
    "command": "insertDateString.insertDate"
  },
  {
    "key": "cmd+n cmd+i",
    "command": "insertDateString.insertTime"
  },
  {
    "key": "shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // {
  //   "key": "up",
  //   "command": "cursorUp",
  //   "when": "editorLangId == 'markdown' && editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  // {
  //   "key": "down",
  //   "command": "cursorDown",
  //   "when": "editorLangId == 'markdown' && editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  // {
  //   "key": "k",
  //   "command": "cursorUp",
  //   "when": "editorLangId == 'markdown' && editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  // {
  //   "key": "j",
  //   "command": "cursorDown",
  //   "when": "editorLangId == 'markdown' && editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  // },
  {
    "key": "alt+cmd+\\",
    "command": "workbench.action.debug.selectandstart"
  },
  {
    "key": "cmd+n shift+cmd+d",
    "command": "insertDateString.insertOwnFormatDateTime"
  },
  {
    "key": "tab",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly && vim.mode != 'CommandlineInProgress'"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+/",
    "command": "language-julia.show-documentation",
    "when": "editorTextFocus && editorLangId == 'julia'"
  },
  {
    "key": "alt+j alt+d",
    "command": "-language-julia.show-documentation",
    "when": "editorTextFocus && editorLangId == 'julia'"
  },
  {
    "key": "ctrl+\\ shift+cmd+/",
    "command": "julia-documentation.focus"
  },
  {
    "key": "ctrl+\\ ctrl+=",
    "command": "bookmarksExplorer.focus"
  },
  {
    "key": "ctrl+\\ ctrl+-",
    "command": "todo-tree-view.focus"
  },
  {
    "key": "ctrl+e ctrl+s",
    "command": "search.action.openNewEditor"
  },
  {
    "key": "cmd+k cmd+j",
    "command": "editor.action.dirtydiff.previous",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f3",
    "command": "-editor.action.dirtydiff.previous",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+]",
    "command": "editor.action.dirtydiff.next",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f3",
    "command": "-editor.action.dirtydiff.next",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+\\",
    "command": "language-julia.debugEditorContents",
    "when": "!inDebugMode && editorLangId == 'julia'"
  },
  {
    "key": "ctrl+\\ ctrl+=",
    "command": "memo.backlinksPanel.focus"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "recall.startRecall"
  },
  {
    "key": "cmd+k shift+cmd+r",
    "command": "recall.startFileReview"
  },
  {
    "key": "cmd+k cmd+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+]",
    "command": "gitlens.diffWithNext",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+cmd+[",
    "command": "gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "shift+alt+,",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+k cmd+l",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+h",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  }
]
